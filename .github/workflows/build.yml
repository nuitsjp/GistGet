name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  GITHUB_TOKEN: ${{ secrets.GIST_ACCESS_TOKEN }}

jobs:
  # Linux環境での基本ビルドとテスト
  test-core:
    name: Core Tests (Linux)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Test Core Features
      run: |
        dotnet test --no-build --configuration Release \
          --filter "Category=Core|Category=GistSync" \
          --logger "trx;LogFileName=test-results.trx" \
          --logger "console;verbosity=detailed"
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-linux
        path: '**/test-results.trx'

  # Windows環境でのフルビルド（週次または手動実行）
  build-windows:
    name: Full Build (Windows)
    runs-on: windows-latest
    if: |
      github.event_name == 'workflow_dispatch' || 
      github.event_name == 'schedule' ||
      contains(github.event.head_commit.message, '[windows]')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Test (No Admin Required)
      run: |
        dotnet test --no-build --configuration Release `
          --filter "Category!=RequiresAdmin" `
          --logger "trx;LogFileName=test-results.trx"
    
    - name: Create self-contained executable
      run: |
        dotnet publish src/GistGet/GistGet.csproj `
          -c Release `
          -r win-x64 `
          --self-contained `
          -p:PublishSingleFile=true `
          -p:PublishReadyToRun=true `
          -o ./publish
    
    - name: Upload Windows executable
      uses: actions/upload-artifact@v3
      with:
        name: gistget-win-x64
        path: ./publish/GistGet.exe

  # コード品質チェック（Linux）
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Install dotnet-format
      run: dotnet tool install -g dotnet-format
    
    - name: Check formatting
      run: dotnet format --verify-no-changes --verbosity diagnostic
    
    - name: Run code analysis
      run: dotnet build --no-incremental /p:EnforceCodeStyleInBuild=true