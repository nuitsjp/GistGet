name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-*'

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  create-release:
    name: Create Release
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Extract version from tag
      id: version
      run: |
        $VERSION = "${{ github.ref_name }}".Substring(1)
        echo "VERSION=$VERSION" >> $env:GITHUB_OUTPUT
        echo "Building version: $VERSION"
    
    - name: Build Release Executable
      run: |
        dotnet publish src/GistGet/GistGet.csproj `
          -c Release `
          -r win-x64 `
          --self-contained `
          -p:PublishSingleFile=true `
          -p:PublishReadyToRun=true `
          -p:IncludeNativeLibrariesForSelfExtract=true `
          -p:Version=${{ steps.version.outputs.VERSION }} `
          -o ./release
    
    - name: Create checksums
      run: |
        cd release
        certutil -hashfile GistGet.exe SHA256 > GistGet.exe.sha256
        certutil -hashfile GistGet.exe MD5 > GistGet.exe.md5
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: GistGet ${{ steps.version.outputs.VERSION }}
        body: |
          ## GistGet ${{ steps.version.outputs.VERSION }}
          
          ### インストール方法
          1. `GistGet.exe` をダウンロード
          2. 任意のフォルダに配置
          3. システムのPATHに追加（オプション）
          
          ### 必要環境
          - Windows 11
          - WinGet がインストール済み
          
          ### チェックサム
          ダウンロード後、以下のコマンドで検証できます:
          ```powershell
          certutil -hashfile GistGet.exe SHA256
          ```
        draft: true
        prerelease: ${{ contains(github.ref_name, '-') }}
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/GistGet.exe
        asset_name: GistGet.exe
        asset_content_type: application/octet-stream
    
    - name: Upload Checksum SHA256
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/GistGet.exe.sha256
        asset_name: GistGet.exe.sha256
        asset_content_type: text/plain